[{"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/index.js":"1","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/App.js":"2","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/reportWebVitals.js":"3","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Header/header-index.js":"4","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/home-page-index.js":"5","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Profile/profile-index.js":"6","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Header/Menu-extend.js":"7","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/Custom-Tabs.js":"8","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Profile/button.js":"9","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Profile/avatar.js":"10","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Chat/chat-index.js":"11","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Axios.js":"12","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/ChatMenu.js":"13","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/Custom-Button.js":"14"},{"size":500,"mtime":1611089788138,"results":"15","hashOfConfig":"16"},{"size":664,"mtime":1611292854193,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611089788139,"results":"18","hashOfConfig":"16"},{"size":348,"mtime":1611268277903,"results":"19","hashOfConfig":"16"},{"size":1228,"mtime":1611293141908,"results":"20","hashOfConfig":"16"},{"size":1175,"mtime":1611271261662,"results":"21","hashOfConfig":"16"},{"size":6874,"mtime":1611271261659,"results":"22","hashOfConfig":"16"},{"size":2532,"mtime":1611293058052,"results":"23","hashOfConfig":"16"},{"size":533,"mtime":1611089788137,"results":"24","hashOfConfig":"16"},{"size":578,"mtime":1611271261661,"results":"25","hashOfConfig":"16"},{"size":1484,"mtime":1611292568032,"results":"26","hashOfConfig":"16"},{"size":871,"mtime":1611268277899,"results":"27","hashOfConfig":"16"},{"size":2098,"mtime":1611268277904,"results":"28","hashOfConfig":"16"},{"size":4183,"mtime":1611268277907,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"150c6t9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/index.js",[],["64","65"],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/App.js",[],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/reportWebVitals.js",[],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Header/header-index.js",[],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/home-page-index.js",["66"],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Profile/profile-index.js",["67","68","69"],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Header/Menu-extend.js",[],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/Custom-Tabs.js",["70"],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Profile/button.js",["71"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function ContainedButtons() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button variant=\"contained\" color=\"primary\" style={{paddingLeft: \"10%\"}} style={{marginTop: \"5px\"}}>\n        Edit Profile\n      </Button>\n    </div>\n  );\n}\n","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Profile/avatar.js",["72","73"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(5),\n      width: theme.spacing(30),\n      height: theme.spacing(30),\n    },\n  },\n}));\n\nexport default function LetterAvatars() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Avatar> <h1>User</h1> </Avatar>\n    </div>\n  );\n}\n","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Chat/chat-index.js",["74","75","76","77"],"/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Axios.js",["78","79"],"import { convertRowsPropToState } from \"@material-ui/data-grid\";\nimport axios from \"axios\";\n\nconst LOCAL_PYTHON_API = 'http://localhost:5000';\n\nconst axiosRequestBuilder = (API_URL, URL, METHOD, BODY) => {\n    switch (METHOD) {\n        case 'GET':\n            return axios.get(`${API_URL}/${URL}`);\n        case 'POST':\n            return axios.post(`${API_URL}/${URL}`, BODY);\n        default:\n            return;\n    }\n};\n\n\nconst genericRequest = {\n    get: url =>\n        axiosRequestBuilder(LOCAL_PYTHON_API, url, 'GET'),\n    post: postUrl =>\n        axiosRequestBuilder(LOCAL_PYTHON_API, postUrl, 'POST')\n};\n\nconst PYTHON_API = {\n    getUsers: () =>\n        genericRequest.get(`users`),\n    getInterests: () =>\n        genericRequest.get(`interests`),\n    getInterestsID: (id) =>\n        genericRequest.get(`interests?id=${id}`)\n};\n\nexport default {\n    PYTHON_API\n}","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/ChatMenu.js",["80"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ChatButton from './Custom-Button'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function NestedGrid(props) {\n  const classes = useStyles();\n\n  const breakIntoParts = (num, parts) => \n        [...Array(parts)].map((_,i) => \n          0|(i < num%parts ? num/parts+1 : num/parts))\n\n  const partionArrayIntoThree = (index) => {\n    if (!props.dataArray) {\n        return []\n    }\n\n    const arrayBreakdown = breakIntoParts(props.dataArray.interests.length,3)\n\n    if (index === 0) {\n        return props.dataArray.interests.slice(0, arrayBreakdown[index]);\n    } else if (index === 1) {\n        const startingIndex = arrayBreakdown[index - 1];\n        return props.dataArray.interests.slice(startingIndex, (arrayBreakdown[index] + startingIndex)); \n    }else if (index === 2) {\n        const startingIndex = arrayBreakdown[index - 2] + arrayBreakdown[index - 1];\n        return props.dataArray.interests.slice(startingIndex, (arrayBreakdown[index] + startingIndex));\n    }\n  }\n\n  function FormRow() {\n    return (\n      <React.Fragment>\n        <Grid item xs={4} >\n            <ChatButton handleChange={props.changeHandler} style={{flexWrap : 'wrap'}} dataArray={partionArrayIntoThree(0)}/>\n        </Grid>\n        <Grid item xs={4}>\n            <ChatButton handleChange={props.changeHandler} style={{flexWrap : 'wrap'}} dataArray={partionArrayIntoThree(1)}/>\n        </Grid>\n        <Grid item xs={4}>\n            <ChatButton handleChange={props.changeHandler} style={{flexWrap : 'wrap'}} dataArray={partionArrayIntoThree(2)}/>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container  >\n        <Grid container item xs={12} >\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/XenaDatabase/Documents/2021-Hackathon/frontend/src/Home-Page/Custom-Button.js",["81","82"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from \"react-router-dom\";\n\nconst buildButton = (props) => {\n    const imagesToReturn = [];\n    \n    if (!props.dataArray) {\n        return imagesToReturn\n    }\n\n    props.dataArray.map(valueContainer => {\n        imagesToReturn.push(\n            {\n                url: valueContainer.url,\n                title: valueContainer.interest,\n                width: `${(100 / props.dataArray.interests)}%`,\n                ID: 1,\n                // linkToQueryPage: valueContainer.linkTo\n            },\n        )\n    });\n    return imagesToReturn\n};\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      minWidth: 225,\n      width: '100%',\n    },\n    image: {\n      position: 'relative',\n      height: 200,\n      [theme.breakpoints.down('xs')]: {\n        width: '100% !important', // Overrides inline-style\n        height: 100,\n      },\n      '&:hover, &$focusVisible': {\n        zIndex: 1,\n        '& $imageBackdrop': {\n          opacity: 0.15,\n        },\n        '& $imageMarked': {\n          opacity: 0,\n        },\n        '& $imageTitle': {\n          border: '4px solid currentColor',\n        },\n      },\n    },\n    focusVisible: {},\n    imageButton: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.common.white,\n    },\n    imageSrc: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center 40%',\n    },\n    imageBackdrop: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundColor: theme.palette.common.black,\n      opacity: 0.4,\n      transition: theme.transitions.create('opacity'),\n    },\n    imageTitle: {\n      position: 'relative',\n      padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n    },\n    imageMarked: {\n      height: 3,\n      width: 18,\n      backgroundColor: theme.palette.common.white,\n      position: 'absolute',\n      bottom: -2,\n      left: 'calc(50% - 9px)',\n      transition: theme.transitions.create('opacity'),\n    },\n  }));\n\nconst BackgroundImageReturnLink = (image) => {\n    const classes = useStyles();\n    if (!image) {\n        return null\n    }\n\n    return (\n        <span\n            className={classes.imageSrc}\n            style={{\n                backgroundImage: `url(http://127.0.0.1:8080/static/${image})`,\n            }}\n        />\n    )\n};\n\nexport default function ChatButton(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root} style={props.style}>\n            {buildButton(props).map(image => (\n                <ButtonBase\n                    focusRipple\n                    key={image.title}\n                    className={classes.image}\n                    focusVisibleClassName={classes.focusVisible}\n                    style={{\n                        width: '100%',\n                    }}\n                    onClick={() => props.handleChange(false ,image.title)}\n                    component={Link} to=\"/chats\"\n                >\n\n                    <span\n                        className={classes.imageSrc}\n                        style={{\n                            backgroundImage: `url(${image.url})`,\n                        }}\n                    />\n                    <span className={classes.imageBackdrop} />\n                    <span className={classes.imageButton}>\n            <Typography\n                component=\"span\"\n                variant=\"subtitle1\"\n                color=\"inherit\"\n                className={classes.imageTitle}\n            >\n              {image.title}\n                <span className={classes.imageMarked}/>\n            </Typography>\n          </span>\n                </ButtonBase>\n            ))}\n        </div>\n    );\n}",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":21},{"ruleId":"87","severity":1,"message":"92","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":24},{"ruleId":"87","severity":1,"message":"93","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":18},{"ruleId":"87","severity":1,"message":"93","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":18,"column":80,"nodeType":"96","endLine":18,"endColumn":106},{"ruleId":"87","severity":1,"message":"97","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":20},{"ruleId":"87","severity":1,"message":"98","line":4,"column":22,"nodeType":"89","messageId":"90","endLine":4,"endColumn":32},{"ruleId":"87","severity":1,"message":"99","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"100","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"101","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"102","line":27,"column":7,"nodeType":"89","messageId":"90","endLine":27,"endColumn":15},{"ruleId":"87","severity":1,"message":"103","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":34,"column":1,"nodeType":"106","endLine":36,"endColumn":2},{"ruleId":"87","severity":1,"message":"107","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":14,"column":40,"nodeType":"110","messageId":"111","endLine":14,"endColumn":42},{"ruleId":"87","severity":1,"message":"112","line":102,"column":7,"nodeType":"89","messageId":"90","endLine":102,"endColumn":32},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'LetterAvatars' is defined but never used.","'ContainedButtons' is defined but never used.","'Typography' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'deepOrange' is defined but never used.","'deepPurple' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'channels' is assigned a value but never used.","'convertRowsPropToState' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Paper' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'BackgroundImageReturnLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]